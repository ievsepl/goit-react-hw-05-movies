{"version":3,"file":"static/js/706.77522a43.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/MovieList/MovieList.jsx","components/Seachbar/Searchbar.jsx","pages/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  typography,\n  space,\n  color,\n  flexbox,\n  layout,\n  border,\n} from 'styled-system';\n\nconst Box = styled('div')(typography, space, color, flexbox, layout, border);\nexport default Box;\n","import PropTypes from 'prop-types';\n\nimport Box from 'components/Box/Box';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ askedMovies }) => {\n  const location = useLocation();\n  // console.log(location);\n\n  return (\n    <Box as=\"ul\">\n      {askedMovies.map(({ title, name, id }) => {\n        return (\n          <li key={id}>\n            <Link to={`/Movies/${id}`} state={{ from: location }}>\n              {name ?? title}\n            </Link>\n          </li>\n        );\n      })}\n    </Box>\n  );\n};\nMovieList.propTypes = {\n  askedMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Box from 'components/Box/Box';\n\nexport const Searchbar = ({ inputValue }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSubmitSearchQuery = e => {\n    e.preventDefault();\n    const search = e.currentTarget.query.value;\n\n    if (search === '') {\n      return toast.error('Please write your query');\n    }\n    setSearchParams(search !== '' ? { filter: search, page: 1 } : {});\n    console.log(searchParams);\n    inputValue(e.currentTarget.query.value);\n\n    e.currentTarget.query.value = '';\n  };\n\n  return (\n    <Box>\n      <form onSubmit={onSubmitSearchQuery}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </Box>\n  );\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useEffect, useState, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Box from 'components/Box/Box';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Searchbar } from 'components/Seachbar/Searchbar';\nimport { queryByName } from 'services/Api';\n// import { useRef } from 'react';\n// idle - простій\n// pending - очікується\n// resolved - успішно виконане\n// rejected - відхилено(помилка)\n//\nconst Movies = () => {\n  // const initFetch = useRef(true);\n  const [askedMovies, setAskedMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const [page, setPage] = useState(1);\n  const [status, setStatus] = useState('idle');\n  // const filter = searchParams.get('filter');\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const { filter, page } = params;\n  // console.log(searchValue);\n  const inputValue = searchBarValue => {\n    setSearchValue(searchBarValue);\n  };\n\n  if (searchValue !== '') {\n    setAskedMovies([]);\n    setSearchValue('');\n  }\n\n  useEffect(() => {\n    // setAskedMovies([]);\n    if (filter === '' || filter === undefined) {\n      return;\n    }\n\n    setStatus('pending');\n    queryByName(filter, page).then(response => {\n      setAskedMovies(prev => {\n        return [...prev, ...response.results];\n      });\n\n      if (response.results.length === 0) {\n        return toast.error('We have no movie by your query');\n      } else if (response.results.length < 20) {\n        toast.warn('There are no more images to load!');\n        setStatus('idle');\n      }\n      // setAskedMovies(response.results);\n\n      setStatus('resolved');\n      // initFetch.current = false;\n    });\n  }, [filter, page]);\n\n  const onLoadMore = () => {\n    // setPage(prev => prev + 1);\n    setSearchParams({ filter: filter, page: Number(page) + 1 });\n  };\n\n  return (\n    <Box>\n      <Searchbar inputValue={inputValue} />\n      {<MovieList askedMovies={askedMovies} />}\n      {status === 'resolved' && (\n        <button type=\"button\" onClick={onLoadMore}>\n          Load more\n        </button>\n      )}\n    </Box>\n  );\n};\nexport default Movies;\n// ?? <p>Write your query</p>\n","import axios from 'axios';\nimport noPoster from '../img/noPoster/noPoster.png';\nimport noImage from '../img//noImage.jpg';\nimport notFoundMovie from '../img//notFoundMovie.jpg';\n\nexport const NO_PHOTO = noImage;\nexport const NO_POSTER = noPoster;\nexport const NOT_FOUND = notFoundMovie;\n\nconst MY_KEY = '918bf745d942a4e02da57dd40b893231';\nconst moviesRequest = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/';\nexport const POSTER_SIZE = 'w300/';\nexport const CAST_SIZE = 'w45/';\n\nexport const trendMovie = async () => {\n  try {\n    const {\n      data: { results },\n    } = await moviesRequest.get(`/trending/all/day`, {\n      params: { api_key: MY_KEY },\n    });\n\n    // console.log(results);\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const movieById = async id => {\n  // console.log(id);\n\n  try {\n    const data = await moviesRequest.get(`/movie/${id}?`, {\n      params: { api_key: MY_KEY },\n    });\n\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const castMovieById = async id => {\n  // console.log(id);\n\n  try {\n    const data = await moviesRequest.get(`/movie/${id}/credits?`, {\n      params: { api_key: MY_KEY },\n    });\n\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const reviewsMovieById = async id => {\n  // console.log(id);\n\n  try {\n    const data = await moviesRequest.get(`/movie/${id}/reviews?&page=1`, {\n      params: { api_key: MY_KEY },\n    });\n\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const queryByName = async (filter, page) => {\n  // console.log(filter);\n  // console.log(page);\n\n  try {\n    const { data } = await moviesRequest.get(\n      `/search/movie?&query=${filter}&page=${page}&include_adult=false`,\n      { params: { api_key: MY_KEY } }\n    );\n\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Box","styled","typography","space","color","flexbox","layout","border","MovieList","askedMovies","location","useLocation","as","map","title","name","id","to","state","from","Searchbar","inputValue","useSearchParams","searchParams","setSearchParams","onSubmit","e","preventDefault","search","currentTarget","query","value","toast","filter","page","console","log","type","useState","setAskedMovies","searchValue","setSearchValue","status","setStatus","params","useMemo","Object","fromEntries","useEffect","undefined","queryByName","then","response","prev","results","length","searchBarValue","onClick","Number","NO_PHOTO","noImage","NO_POSTER","noPoster","NOT_FOUND","notFoundMovie","MY_KEY","moviesRequest","axios","baseURL","BASE_POSTER_URL","POSTER_SIZE","CAST_SIZE","trendMovie","get","api_key","data","movieById","castMovieById","reviewsMovieById"],"sourceRoot":""}