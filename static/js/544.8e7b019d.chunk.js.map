{"version":3,"file":"static/js/544.8e7b019d.chunk.js","mappings":"6JAUMA,GAAMC,EAAAA,EAAAA,GAAO,MAAPA,CAAcC,EAAAA,GAAYC,EAAAA,GAAOC,EAAAA,GAAOC,EAAAA,GAASC,EAAAA,GAAQC,EAAAA,IACrE,K,iGCNaC,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACpBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAAC,IAAD,CAAKC,GAAG,KAAR,SACGH,EAAYI,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC/B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMT,GAA1C,gBACGK,QADH,IACGA,EAAAA,EAAQD,KAFJE,EAMZ,KAGN,C,mFCJD,UAba,WACX,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAUA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAaC,MAAK,SAAAC,GAChB,OAAOJ,EAAeI,EACvB,GACF,GAAE,KAEI,SAAC,IAAD,CAAWjB,YAAaY,GAChC,C,iXCZYM,EAAWC,EACXC,EAAYC,EACZC,EAAYC,EAEnBC,EAAS,mCACTC,EAAgBC,EAAAA,EAAAA,OAAa,CACjCC,QAAS,kCAGEC,EAAkB,8BAClBC,EAAc,QACdC,EAAY,OAEZf,EAAU,mCAAG,+GAIZU,EAAcM,IAAd,oBAAuC,CAC/CC,OAAQ,CAAEC,QAAST,KALC,uBAGZP,EAHY,EAGpBiB,KAAQjB,QAHY,kBASfA,GATe,gCAWtBkB,QAAQC,IAAR,MAXsB,yDAAH,qDAeVC,EAAS,mCAAG,WAAM9B,GAAN,gGAIFkB,EAAcM,IAAd,iBAA4BxB,EAA5B,KAAmC,CACpDyB,OAAQ,CAAEC,QAAST,KALA,cAIfU,EAJe,yBASdA,GATc,gCAWrBC,QAAQC,IAAR,MAXqB,yDAAH,sDAeTE,EAAa,mCAAG,WAAM/B,GAAN,gGAINkB,EAAcM,IAAd,iBAA4BxB,EAA5B,aAA2C,CAC5DyB,OAAQ,CAAEC,QAAST,KALI,cAInBU,EAJmB,OAQzBC,QAAQC,IAAIF,GARa,kBASlBA,GATkB,gCAWzBC,QAAQC,IAAR,MAXyB,yDAAH,sDAcbG,EAAgB,mCAAG,WAAMhC,GAAN,gGAITkB,EAAcM,IAAd,iBAA4BxB,EAA5B,oBAAkD,CACnEyB,OAAQ,CAAEC,QAAST,KALO,cAItBU,EAJsB,yBASrBA,GATqB,gCAW5BC,QAAQC,IAAR,MAX4B,yDAAH,sDAehBI,EAAW,mCAAG,WAAOC,EAAQC,GAAf,kGAKAjB,EAAcM,IAAd,+BACGU,EADH,iBACkBC,EADlB,wBAErB,CAAEV,OAAQ,CAAEC,QAAST,KAPA,uBAKfU,EALe,EAKfA,KALe,kBAWhBA,GAXgB,gCAavBC,QAAQC,IAAR,MAbuB,yDAAH,uD","sources":["components/Box/Box.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  typography,\n  space,\n  color,\n  flexbox,\n  layout,\n  border,\n} from 'styled-system';\n\nconst Box = styled('div')(typography, space, color, flexbox, layout, border);\nexport default Box;\n","import PropTypes from 'prop-types';\n\nimport Box from 'components/Box/Box';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ askedMovies }) => {\n  const location = useLocation();\n  // console.log(location);\n\n  return (\n    <Box as=\"ul\">\n      {askedMovies.map(({ title, name, id }) => {\n        return (\n          <li key={id}>\n            <Link to={`/Movies/${id}`} state={{ from: location }}>\n              {name ?? title}\n            </Link>\n          </li>\n        );\n      })}\n    </Box>\n  );\n};\nMovieList.propTypes = {\n  askedMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\n\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { trendMovie } from 'services/Api';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  //\n  // ==========================Trend Movie for homepage==========================\n  //\n  useEffect(() => {\n    trendMovie().then(results => {\n      return setTrendMovies(results);\n    });\n  }, []);\n\n  return <MovieList askedMovies={trendMovies} />;\n};\nexport default Home;\n","import axios from 'axios';\nimport noPoster from '../img/noPoster/noPoster.png';\nimport noImage from '../img//noImage.jpg';\nimport notFoundMovie from '../img//notFoundMovie.jpg';\n\nexport const NO_PHOTO = noImage;\nexport const NO_POSTER = noPoster;\nexport const NOT_FOUND = notFoundMovie;\n\nconst MY_KEY = '918bf745d942a4e02da57dd40b893231';\nconst moviesRequest = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/';\nexport const POSTER_SIZE = 'w300/';\nexport const CAST_SIZE = 'w45/';\n\nexport const trendMovie = async () => {\n  try {\n    const {\n      data: { results },\n    } = await moviesRequest.get(`/trending/all/day`, {\n      params: { api_key: MY_KEY },\n    });\n\n    // console.log(results);\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const movieById = async id => {\n  // console.log(id);\n\n  try {\n    const data = await moviesRequest.get(`/movie/${id}?`, {\n      params: { api_key: MY_KEY },\n    });\n\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const castMovieById = async id => {\n  // console.log(id);\n\n  try {\n    const data = await moviesRequest.get(`/movie/${id}/credits?`, {\n      params: { api_key: MY_KEY },\n    });\n\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const reviewsMovieById = async id => {\n  // console.log(id);\n\n  try {\n    const data = await moviesRequest.get(`/movie/${id}/reviews?&page=1`, {\n      params: { api_key: MY_KEY },\n    });\n\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const queryByName = async (filter, page) => {\n  // console.log(filter);\n  // console.log(page);\n\n  try {\n    const { data } = await moviesRequest.get(\n      `/search/movie?&query=${filter}&page=${page}&include_adult=false`,\n      { params: { api_key: MY_KEY } }\n    );\n\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Box","styled","typography","space","color","flexbox","layout","border","MovieList","askedMovies","location","useLocation","as","map","title","name","id","to","state","from","useState","trendMovies","setTrendMovies","useEffect","trendMovie","then","results","NO_PHOTO","noImage","NO_POSTER","noPoster","NOT_FOUND","notFoundMovie","MY_KEY","moviesRequest","axios","baseURL","BASE_POSTER_URL","POSTER_SIZE","CAST_SIZE","get","params","api_key","data","console","log","movieById","castMovieById","reviewsMovieById","queryByName","filter","page"],"sourceRoot":""}