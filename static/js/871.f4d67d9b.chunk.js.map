{"version":3,"file":"static/js/871.f4d67d9b.chunk.js","mappings":"6JAUMA,GAAMC,EAAAA,EAAAA,GAAO,MAAPA,CAAcC,EAAAA,GAAYC,EAAAA,GAAOC,EAAAA,GAAOC,EAAAA,GAASC,EAAAA,GAAQC,EAAAA,IACrE,K,4FC0BA,UA9BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GAASI,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAC7BN,EAAWM,EADkB,GAGhC,GAAE,CAACL,IACJO,QAAQC,IAAIV,IAGV,8BACsB,IAAnBA,EAAQW,QACP,SAAC,IAAD,CAAKC,GAAG,KAAR,gBACGZ,QADH,IACGA,OADH,EACGA,EAASa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,QAC3B,OACE,2BACE,wBAAKF,KACL,uBAAIE,MAFGD,EAKZ,OAGH,gEAIP,C,iXC/BYE,EAAWC,EACXC,EAAYC,EACZC,EAAYC,EAEnBC,EAAS,mCACTC,EAAgBC,EAAAA,EAAAA,OAAa,CACjCC,QAAS,kCAGEC,EAAkB,8BAClBC,EAAc,QACdC,EAAY,OAEZC,EAAU,mCAAG,+GAIZN,EAAcO,IAAd,oBAAuC,CAC/CC,OAAQ,CAAEC,QAASV,KALC,uBAGZhB,EAHY,EAGpBC,KAAQD,QAHY,kBASfA,GATe,gCAWtBE,QAAQC,IAAR,MAXsB,yDAAH,qDAeVwB,EAAS,mCAAG,WAAMnB,GAAN,gGAIFS,EAAcO,IAAd,iBAA4BhB,EAA5B,KAAmC,CACpDiB,OAAQ,CAAEC,QAASV,KALA,cAIff,EAJe,yBASdA,GATc,gCAWrBC,QAAQC,IAAR,MAXqB,yDAAH,sDAeTyB,EAAa,mCAAG,WAAMpB,GAAN,gGAINS,EAAcO,IAAd,iBAA4BhB,EAA5B,aAA2C,CAC5DiB,OAAQ,CAAEC,QAASV,KALI,cAInBf,EAJmB,OAQzBC,QAAQC,IAAIF,GARa,kBASlBA,GATkB,gCAWzBC,QAAQC,IAAR,MAXyB,yDAAH,sDAcbL,EAAgB,mCAAG,WAAMU,GAAN,gGAITS,EAAcO,IAAd,iBAA4BhB,EAA5B,oBAAkD,CACnEiB,OAAQ,CAAEC,QAASV,KALO,cAItBf,EAJsB,yBASrBA,GATqB,gCAW5BC,QAAQC,IAAR,MAX4B,yDAAH,sDAehB0B,EAAW,mCAAG,WAAOC,EAAQC,GAAf,kGAKAd,EAAcO,IAAd,+BACGM,EADH,iBACkBC,EADlB,wBAErB,CAAEN,OAAQ,CAAEC,QAASV,KAPA,uBAKff,EALe,EAKfA,KALe,kBAWhBA,GAXgB,gCAavBC,QAAQC,IAAR,MAbuB,yDAAH,uD","sources":["components/Box/Box.jsx","pages/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  typography,\n  space,\n  color,\n  flexbox,\n  layout,\n  border,\n} from 'styled-system';\n\nconst Box = styled('div')(typography, space, color, flexbox, layout, border);\nexport default Box;\n","import Box from 'components/Box/Box';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { reviewsMovieById } from 'services/Api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    reviewsMovieById(movieId).then(({ data: { results } }) =>\n      setReviews(results)\n    );\n  }, [movieId]);\n  console.log(reviews);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <Box as=\"ul\">\n          {reviews?.map(({ author, id, content }) => {\n            return (\n              <li key={id}>\n                <h2>{author}</h2>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </Box>\n      ) : (\n        <p>There are no reviews for this movie</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nimport noPoster from '../img/noPoster/noPoster.png';\nimport noImage from '../img//noImage.jpg';\nimport notFoundMovie from '../img//notFoundMovie.jpg';\n\nexport const NO_PHOTO = noImage;\nexport const NO_POSTER = noPoster;\nexport const NOT_FOUND = notFoundMovie;\n\nconst MY_KEY = '918bf745d942a4e02da57dd40b893231';\nconst moviesRequest = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/';\nexport const POSTER_SIZE = 'w300/';\nexport const CAST_SIZE = 'w45/';\n\nexport const trendMovie = async () => {\n  try {\n    const {\n      data: { results },\n    } = await moviesRequest.get(`/trending/all/day`, {\n      params: { api_key: MY_KEY },\n    });\n\n    // console.log(results);\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const movieById = async id => {\n  // console.log(id);\n\n  try {\n    const data = await moviesRequest.get(`/movie/${id}?`, {\n      params: { api_key: MY_KEY },\n    });\n\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const castMovieById = async id => {\n  // console.log(id);\n\n  try {\n    const data = await moviesRequest.get(`/movie/${id}/credits?`, {\n      params: { api_key: MY_KEY },\n    });\n\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const reviewsMovieById = async id => {\n  // console.log(id);\n\n  try {\n    const data = await moviesRequest.get(`/movie/${id}/reviews?&page=1`, {\n      params: { api_key: MY_KEY },\n    });\n\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const queryByName = async (filter, page) => {\n  // console.log(filter);\n  // console.log(page);\n\n  try {\n    const { data } = await moviesRequest.get(\n      `/search/movie?&query=${filter}&page=${page}&include_adult=false`,\n      { params: { api_key: MY_KEY } }\n    );\n\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Box","styled","typography","space","color","flexbox","layout","border","useState","reviews","setReviews","movieId","useParams","useEffect","reviewsMovieById","then","results","data","console","log","length","as","map","author","id","content","NO_PHOTO","noImage","NO_POSTER","noPoster","NOT_FOUND","notFoundMovie","MY_KEY","moviesRequest","axios","baseURL","BASE_POSTER_URL","POSTER_SIZE","CAST_SIZE","trendMovie","get","params","api_key","movieById","castMovieById","queryByName","filter","page"],"sourceRoot":""}